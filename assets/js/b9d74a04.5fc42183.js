"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[131],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(r),f=o,y=d["".concat(u,".").concat(f)]||d[f]||l[f]||a;return r?n.createElement(y,i(i({ref:t},s),{},{components:r})):n.createElement(y,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},741:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"Priority Queue",date:new Date("2022-12-29T00:00:00.000Z")},i=void 0,c={unversionedId:"notes/Data Structure/priority-queue",id:"notes/Data Structure/priority-queue",title:"Priority Queue",description:"Leetcode 1834. Single-Threaded CPU",source:"@site/docs/notes/Data Structure/priority-queue.md",sourceDirName:"notes/Data Structure",slug:"/notes/Data Structure/priority-queue",permalink:"/notes/docs/notes/Data Structure/priority-queue",draft:!1,editUrl:"https://github.com/SimoneCheng/notes/tree/main/docs/notes/Data Structure/priority-queue.md",tags:[],version:"current",lastUpdatedBy:"SimoneCheng",lastUpdatedAt:1673164642,formattedLastUpdatedAt:"Jan 8, 2023",frontMatter:{title:"Priority Queue",date:"2022-12-29T00:00:00.000Z"},sidebar:"notes",previous:{title:"Binary Tree \u4e8c\u5143\u6a39",permalink:"/notes/docs/notes/Data Structure/binary-tree"},next:{title:"Git Basic - \u5206\u652f\u8207\u5206\u652f\u5408\u4f75",permalink:"/notes/docs/notes/Git/git-basic-1"}},u={},p=[],s={toc:p};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Leetcode 1834. Single-Threaded CPU\n",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/single-threaded-cpu/"},"https://leetcode.com/problems/single-threaded-cpu/")))}l.isMDXComponent=!0}}]);